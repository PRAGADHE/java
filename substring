class GFG
{
final static int NO_OF_CHARS =256;
static int max_distinct_char(String str , int n)
{
int count[] = new int[NO_OF_CHARS];
for(int i=0;i<n;i++)
{
count[str,charAt(i)]++;
}
int max_distinct=0;
for(int i=0;i<NO_OF_CHARS;i++)
{
if(count[i]!=0)
{
max_distinct++;
}
}
return max_distinct;
}
static int smallesteSubstr_maxDistictChar(String str)
{
int n= str.lenght();
int max_distinct = max_distinct_char(str,n);
for(int i=0;i<n;i++)
{
for(int j=0;j<n;j++)
{
string subs = null;
if(i<j)
subs= str.substring(i,j);
else
subs = str.substring(i,j);
int subs_lenght=subs.length();
int sub_distinct_char=max_distinct_char(subs,subs_length);
if(subs_lenght< min && max_distinct == sub_distinct_char){
min1= subs_lenght;
}
}
}
return min1;
}
static public void main(String[] args)
{
String str = "AABBCBB";
int len = smallesteSubstr_maxDistinctChar(str);
System.out.println(len);
}

